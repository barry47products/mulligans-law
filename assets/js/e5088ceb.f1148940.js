"use strict";(globalThis.webpackChunkdocs_technical=globalThis.webpackChunkdocs_technical||[]).push([[303],{8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>a});var i=s(6540);const t={},r=i.createContext(t);function d(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(r.Provider,{value:n},e.children)}},9110:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>o,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"api/auth","title":"Authentication API Reference","description":"Complete API reference for the authentication feature.","source":"@site/docs/api/auth.md","sourceDirName":"api","slug":"/api/auth","permalink":"/mulligans-law/docs/api/auth","draft":false,"unlisted":false,"editUrl":"https://github.com/barry47products/mulligans-law/tree/main/docs-technical/docs/api/auth.md","tags":[],"version":"current","frontMatter":{}}');var t=s(4848),r=s(8453);const d={},a="Authentication API Reference",l={},c=[{value:"Domain Layer",id:"domain-layer",level:2},{value:"Entities",id:"entities",level:3},{value:"AuthUser",id:"authuser",level:4},{value:"AuthSession",id:"authsession",level:4},{value:"Repository Interface",id:"repository-interface",level:3},{value:"AuthRepository",id:"authrepository",level:4},{value:"<strong>signInWithEmail</strong>",id:"signinwithemail",level:5},{value:"<strong>signUpWithEmail</strong>",id:"signupwithemail",level:5},{value:"<strong>signOut</strong>",id:"signout",level:5},{value:"<strong>getCurrentUser</strong>",id:"getcurrentuser",level:5},{value:"<strong>getCurrentSession</strong>",id:"getcurrentsession",level:5},{value:"<strong>resetPassword</strong>",id:"resetpassword",level:5},{value:"<strong>updateProfile</strong>",id:"updateprofile",level:5},{value:"<strong>authStateChanges</strong>",id:"authstatechanges",level:5},{value:"Use Cases",id:"use-cases",level:3},{value:"SignIn",id:"signin",level:4},{value:"SignUp",id:"signup",level:4},{value:"SignOut",id:"signout-1",level:4},{value:"GetCurrentUser",id:"getcurrentuser-1",level:4},{value:"Exceptions",id:"exceptions",level:3},{value:"AuthException",id:"authexception",level:4},{value:"InvalidCredentialsException",id:"invalidcredentialsexception",level:4},{value:"EmailAlreadyExistsException",id:"emailalreadyexistsexception",level:4},{value:"WeakPasswordException",id:"weakpasswordexception",level:4},{value:"UserNotFoundException",id:"usernotfoundexception",level:4},{value:"UnauthorizedException",id:"unauthorizedexception",level:4},{value:"NetworkException",id:"networkexception",level:4},{value:"SessionExpiredException",id:"sessionexpiredexception",level:4},{value:"Presentation Layer",id:"presentation-layer",level:2},{value:"BLoC",id:"bloc",level:3},{value:"AuthBloc",id:"authbloc",level:4},{value:"AuthEvent",id:"authevent",level:4},{value:"<strong>AuthCheckRequested</strong>",id:"authcheckrequested",level:5},{value:"<strong>AuthSignInRequested</strong>",id:"authsigninrequested",level:5},{value:"<strong>AuthSignUpRequested</strong>",id:"authsignuprequested",level:5},{value:"<strong>AuthSignOutRequested</strong>",id:"authsignoutrequested",level:5},{value:"<strong>AuthUserChanged</strong>",id:"authuserchanged",level:5},{value:"AuthState",id:"authstate",level:4},{value:"<strong>AuthInitial</strong>",id:"authinitial",level:5},{value:"<strong>AuthLoading</strong>",id:"authloading",level:5},{value:"<strong>AuthAuthenticated</strong>",id:"authauthenticated",level:5},{value:"<strong>AuthUnauthenticated</strong>",id:"authunauthenticated",level:5},{value:"<strong>AuthError</strong>",id:"autherror",level:5},{value:"Configuration",id:"configuration",level:2},{value:"SupabaseConfig",id:"supabaseconfig",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"authentication-api-reference",children:"Authentication API Reference"})}),"\n",(0,t.jsx)(n.p,{children:"Complete API reference for the authentication feature."}),"\n",(0,t.jsx)(n.h2,{id:"domain-layer",children:"Domain Layer"}),"\n",(0,t.jsx)(n.h3,{id:"entities",children:"Entities"}),"\n",(0,t.jsx)(n.h4,{id:"authuser",children:"AuthUser"}),"\n",(0,t.jsx)(n.p,{children:"Domain entity representing an authenticated user."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Location:"})," ",(0,t.jsx)(n.code,{children:"lib/features/auth/domain/entities/auth_user.dart"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class AuthUser extends Equatable {\n  final String id;\n  final String email;\n  final String? name;\n  final String? avatarUrl;\n  final DateTime createdAt;\n\n  const AuthUser({\n    required this.id,\n    required this.email,\n    this.name,\n    this.avatarUrl,\n    required this.createdAt,\n  });\n\n  @override\n  List<Object?> get props => [id, email, name, avatarUrl, createdAt];\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Properties:"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"id"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:"Unique user identifier (UUID)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"email"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:"User's email address"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"name"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String?"})}),(0,t.jsx)(n.td,{children:"User's display name (optional)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"avatarUrl"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String?"})}),(0,t.jsx)(n.td,{children:"URL to user's avatar image (optional)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"createdAt"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DateTime"})}),(0,t.jsx)(n.td,{children:"Account creation timestamp"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"authsession",children:"AuthSession"}),"\n",(0,t.jsx)(n.p,{children:"Domain entity representing an authentication session with validation."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Location:"})," ",(0,t.jsx)(n.code,{children:"lib/features/auth/domain/entities/auth_session.dart"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class AuthSession extends Equatable {\n  final AuthUser user;\n  final String accessToken;\n  final String refreshToken;\n  final DateTime expiresAt;\n\n  const AuthSession({\n    required this.user,\n    required this.accessToken,\n    required this.refreshToken,\n    required this.expiresAt,\n  });\n\n  bool get isValid => DateTime.now().isBefore(expiresAt);\n\n  @override\n  List<Object> get props => [user, accessToken, refreshToken, expiresAt];\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Properties:"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"user"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"AuthUser"})}),(0,t.jsx)(n.td,{children:"The authenticated user"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"accessToken"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:"JWT access token for API requests"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"refreshToken"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:"JWT refresh token for renewing access"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"expiresAt"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DateTime"})}),(0,t.jsx)(n.td,{children:"Token expiration timestamp"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Getters:"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Getter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"isValid"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bool"})}),(0,t.jsx)(n.td,{children:"Returns true if session hasn't expired"})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"repository-interface",children:"Repository Interface"}),"\n",(0,t.jsx)(n.h4,{id:"authrepository",children:"AuthRepository"}),"\n",(0,t.jsx)(n.p,{children:"Abstract interface defining authentication operations."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Location:"})," ",(0,t.jsx)(n.code,{children:"lib/features/auth/domain/repositories/auth_repository.dart"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"abstract class AuthRepository {\n  Future<AuthSession> signInWithEmail({\n    required String email,\n    required String password,\n  });\n\n  Future<AuthSession> signUpWithEmail({\n    required String email,\n    required String password,\n    String? name,\n  });\n\n  Future<void> signOut();\n\n  Future<AuthUser?> getCurrentUser();\n\n  Future<AuthSession?> getCurrentSession();\n\n  Future<void> resetPassword({required String email});\n\n  Future<void> updateProfile({\n    String? name,\n    String? avatarUrl,\n  });\n\n  Stream<AuthUser?> get authStateChanges;\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Methods:"})}),"\n",(0,t.jsx)(n.h5,{id:"signinwithemail",children:(0,t.jsx)(n.strong,{children:"signInWithEmail"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"Future<AuthSession> signInWithEmail({\n  required String email,\n  required String password,\n})\n"})}),"\n",(0,t.jsx)(n.p,{children:"Authenticates user with email and password."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"email"}),": User's email address"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"password"}),": User's password"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," ",(0,t.jsx)(n.code,{children:"AuthSession"})," on success"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Throws:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"InvalidCredentialsException"})," - Wrong email/password"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"NetworkException"})," - No internet connection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AuthException"})," - Other authentication errors"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"signupwithemail",children:(0,t.jsx)(n.strong,{children:"signUpWithEmail"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"Future<AuthSession> signUpWithEmail({\n  required String email,\n  required String password,\n  String? name,\n})\n"})}),"\n",(0,t.jsx)(n.p,{children:"Creates new user account with email and password."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"email"}),": User's email address"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"password"}),": User's password (minimum 6 characters)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),": User's display name (optional)"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," ",(0,t.jsx)(n.code,{children:"AuthSession"})," on success"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Throws:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"EmailAlreadyExistsException"})," - Email already registered"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"WeakPasswordException"})," - Password doesn't meet requirements"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"NetworkException"})," - No internet connection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AuthException"})," - Other authentication errors"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"signout",children:(0,t.jsx)(n.strong,{children:"signOut"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"Future<void> signOut()\n"})}),"\n",(0,t.jsx)(n.p,{children:"Signs out the current user and clears session."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Throws:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AuthException"})," - Sign out failed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"NetworkException"})," - No internet connection"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"getcurrentuser",children:(0,t.jsx)(n.strong,{children:"getCurrentUser"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"Future<AuthUser?> getCurrentUser()\n"})}),"\n",(0,t.jsx)(n.p,{children:"Gets the currently authenticated user."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," ",(0,t.jsx)(n.code,{children:"AuthUser"})," if signed in, ",(0,t.jsx)(n.code,{children:"null"})," otherwise"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Throws:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AuthException"})," - Failed to get current user"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"getcurrentsession",children:(0,t.jsx)(n.strong,{children:"getCurrentSession"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"Future<AuthSession?> getCurrentSession()\n"})}),"\n",(0,t.jsx)(n.p,{children:"Gets the current authentication session."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," ",(0,t.jsx)(n.code,{children:"AuthSession"})," if session exists, ",(0,t.jsx)(n.code,{children:"null"})," otherwise"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Throws:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"SessionExpiredException"})," - Session has expired"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AuthException"})," - Failed to get session"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"resetpassword",children:(0,t.jsx)(n.strong,{children:"resetPassword"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"Future<void> resetPassword({required String email})\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sends password reset email to user."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"email"}),": User's email address"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Throws:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"UserNotFoundException"})," - Email not found"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"NetworkException"})," - No internet connection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AuthException"})," - Failed to send reset email"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"updateprofile",children:(0,t.jsx)(n.strong,{children:"updateProfile"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"Future<void> updateProfile({\n  String? name,\n  String? avatarUrl,\n})\n"})}),"\n",(0,t.jsx)(n.p,{children:"Updates user profile information."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),": New display name (optional)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"avatarUrl"}),": New avatar URL (optional)"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Throws:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"UnauthorizedException"})," - No user signed in"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"NetworkException"})," - No internet connection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AuthException"})," - Update failed"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"authstatechanges",children:(0,t.jsx)(n.strong,{children:"authStateChanges"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"Stream<AuthUser?> get authStateChanges\n"})}),"\n",(0,t.jsx)(n.p,{children:"Stream that emits when authentication state changes."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," Stream of ",(0,t.jsx)(n.code,{children:"AuthUser?"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Emits:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AuthUser"})," when user signs in"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"null"})," when user signs out"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"use-cases",children:"Use Cases"}),"\n",(0,t.jsx)(n.h4,{id:"signin",children:"SignIn"}),"\n",(0,t.jsx)(n.p,{children:"Email/password sign-in use case with validation."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Location:"})," ",(0,t.jsx)(n.code,{children:"lib/features/auth/domain/usecases/sign_in.dart"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class SignIn {\n  final AuthRepository _repository;\n\n  SignIn(this._repository);\n\n  Future<AuthSession> call({\n    required String email,\n    required String password,\n  }) async {\n    // Validation\n    if (email.trim().isEmpty) {\n      throw const AuthException('Email cannot be empty');\n    }\n    if (password.isEmpty) {\n      throw const AuthException('Password cannot be empty');\n    }\n    if (!_isValidEmail(email)) {\n      throw const AuthException('Invalid email format');\n    }\n\n    // Delegate to repository\n    return await _repository.signInWithEmail(\n      email: email.trim(),\n      password: password,\n    );\n  }\n\n  bool _isValidEmail(String email) {\n    return RegExp(r'^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$').hasMatch(email);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"final signIn = SignIn(authRepository);\ntry {\n  final session = await signIn(\n    email: 'user@example.com',\n    password: 'password123',\n  );\n  print('Signed in: ${session.user.email}');\n} on AuthException catch (e) {\n  print('Sign in failed: ${e.message}');\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"signup",children:"SignUp"}),"\n",(0,t.jsx)(n.p,{children:"Email/password sign-up use case with validation."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Location:"})," ",(0,t.jsx)(n.code,{children:"lib/features/auth/domain/usecases/sign_up.dart"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class SignUp {\n  final AuthRepository _repository;\n  static const int _minimumPasswordLength = 6;\n\n  SignUp(this._repository);\n\n  Future<AuthSession> call({\n    required String email,\n    required String password,\n    String? name,\n  }) async {\n    // Validation\n    if (email.trim().isEmpty) {\n      throw const AuthException('Email cannot be empty');\n    }\n    if (password.isEmpty) {\n      throw const AuthException('Password cannot be empty');\n    }\n    if (!_isValidEmail(email)) {\n      throw const AuthException('Invalid email format');\n    }\n    if (password.length < _minimumPasswordLength) {\n      throw AuthException(\n        'Password must be at least $_minimumPasswordLength characters',\n      );\n    }\n\n    // Delegate to repository\n    return await _repository.signUpWithEmail(\n      email: email.trim(),\n      password: password,\n      name: name?.trim(),\n    );\n  }\n\n  bool _isValidEmail(String email) {\n    return RegExp(r'^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$').hasMatch(email);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"signout-1",children:"SignOut"}),"\n",(0,t.jsx)(n.p,{children:"Sign-out use case."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Location:"})," ",(0,t.jsx)(n.code,{children:"lib/features/auth/domain/usecases/sign_out.dart"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class SignOut {\n  final AuthRepository _repository;\n\n  SignOut(this._repository);\n\n  Future<void> call() async {\n    return await _repository.signOut();\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"getcurrentuser-1",children:"GetCurrentUser"}),"\n",(0,t.jsx)(n.p,{children:"Get current user use case."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Location:"})," ",(0,t.jsx)(n.code,{children:"lib/features/auth/domain/usecases/get_current_user.dart"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class GetCurrentUser {\n  final AuthRepository _repository;\n\n  GetCurrentUser(this._repository);\n\n  Future<AuthUser?> call() async {\n    return await _repository.getCurrentUser();\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"exceptions",children:"Exceptions"}),"\n",(0,t.jsx)(n.p,{children:"Custom authentication exceptions."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Location:"})," ",(0,t.jsx)(n.code,{children:"lib/core/errors/auth_exceptions.dart"})]}),"\n",(0,t.jsx)(n.h4,{id:"authexception",children:"AuthException"}),"\n",(0,t.jsx)(n.p,{children:"Base exception for all authentication errors."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class AuthException implements Exception {\n  final String message;\n  const AuthException(this.message);\n\n  @override\n  String toString() => 'AuthException: $message';\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"invalidcredentialsexception",children:"InvalidCredentialsException"}),"\n",(0,t.jsx)(n.p,{children:"Thrown when email/password combination is incorrect."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class InvalidCredentialsException extends AuthException {\n  const InvalidCredentialsException([String? message])\n      : super(message ?? 'Invalid email or password');\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"emailalreadyexistsexception",children:"EmailAlreadyExistsException"}),"\n",(0,t.jsx)(n.p,{children:"Thrown when attempting to sign up with existing email."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class EmailAlreadyExistsException extends AuthException {\n  const EmailAlreadyExistsException([String? message])\n      : super(message ?? 'Email already exists');\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"weakpasswordexception",children:"WeakPasswordException"}),"\n",(0,t.jsx)(n.p,{children:"Thrown when password doesn't meet requirements."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class WeakPasswordException extends AuthException {\n  const WeakPasswordException([String? message])\n      : super(message ?? 'Password is too weak');\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"usernotfoundexception",children:"UserNotFoundException"}),"\n",(0,t.jsx)(n.p,{children:"Thrown when user email not found."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class UserNotFoundException extends AuthException {\n  const UserNotFoundException([String? message])\n      : super(message ?? 'User not found');\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"unauthorizedexception",children:"UnauthorizedException"}),"\n",(0,t.jsx)(n.p,{children:"Thrown when operation requires authentication."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class UnauthorizedException extends AuthException {\n  const UnauthorizedException([String? message])\n      : super(message ?? 'User not authorized');\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"networkexception",children:"NetworkException"}),"\n",(0,t.jsx)(n.p,{children:"Thrown when network connection fails."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class NetworkException extends AuthException {\n  const NetworkException([String? message])\n      : super(message ?? 'Network error occurred');\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"sessionexpiredexception",children:"SessionExpiredException"}),"\n",(0,t.jsx)(n.p,{children:"Thrown when session has expired."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class SessionExpiredException extends AuthException {\n  const SessionExpiredException([String? message])\n      : super(message ?? 'Session has expired');\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"presentation-layer",children:"Presentation Layer"}),"\n",(0,t.jsx)(n.h3,{id:"bloc",children:"BLoC"}),"\n",(0,t.jsx)(n.h4,{id:"authbloc",children:"AuthBloc"}),"\n",(0,t.jsx)(n.p,{children:"BLoC for managing authentication state."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Location:"})," ",(0,t.jsx)(n.code,{children:"lib/features/auth/presentation/bloc/auth_bloc.dart"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class AuthBloc extends Bloc<AuthEvent, AuthState> {\n  final SignIn _signIn;\n  final SignUp _signUp;\n  final SignOut _signOut;\n  final GetCurrentUser _getCurrentUser;\n  final AuthRepository _authRepository;\n\n  AuthBloc({\n    required SignIn signIn,\n    required SignUp signUp,\n    required SignOut signOut,\n    required GetCurrentUser getCurrentUser,\n    required AuthRepository authRepository,\n  }) : _signIn = signIn,\n       _signUp = signUp,\n       _signOut = signOut,\n       _getCurrentUser = getCurrentUser,\n       _authRepository = authRepository,\n       super(const AuthInitial()) {\n    on<AuthCheckRequested>(_onAuthCheckRequested);\n    on<AuthSignInRequested>(_onAuthSignInRequested);\n    on<AuthSignUpRequested>(_onAuthSignUpRequested);\n    on<AuthSignOutRequested>(_onAuthSignOutRequested);\n    on<AuthUserChanged>(_onAuthUserChanged);\n\n    // Listen to auth state changes\n    _authStateSubscription = _authRepository.authStateChanges.listen((user) {\n      add(AuthUserChanged(user?.id));\n    });\n  }\n\n  @override\n  Future<void> close() {\n    _authStateSubscription?.cancel();\n    return super.close();\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"authevent",children:"AuthEvent"}),"\n",(0,t.jsx)(n.p,{children:"Events that can be sent to AuthBloc."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Location:"})," ",(0,t.jsx)(n.code,{children:"lib/features/auth/presentation/bloc/auth_event.dart"})]}),"\n",(0,t.jsx)(n.h5,{id:"authcheckrequested",children:(0,t.jsx)(n.strong,{children:"AuthCheckRequested"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class AuthCheckRequested extends AuthEvent {}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Check current authentication status on app start."}),"\n",(0,t.jsx)(n.h5,{id:"authsigninrequested",children:(0,t.jsx)(n.strong,{children:"AuthSignInRequested"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class AuthSignInRequested extends AuthEvent {\n  final String email;\n  final String password;\n\n  const AuthSignInRequested({\n    required this.email,\n    required this.password,\n  });\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Request sign in with email and password."}),"\n",(0,t.jsx)(n.h5,{id:"authsignuprequested",children:(0,t.jsx)(n.strong,{children:"AuthSignUpRequested"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class AuthSignUpRequested extends AuthEvent {\n  final String email;\n  final String password;\n  final String? name;\n\n  const AuthSignUpRequested({\n    required this.email,\n    required this.password,\n    this.name,\n  });\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Request sign up with email, password, and optional name."}),"\n",(0,t.jsx)(n.h5,{id:"authsignoutrequested",children:(0,t.jsx)(n.strong,{children:"AuthSignOutRequested"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class AuthSignOutRequested extends AuthEvent {}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Request sign out of current session."}),"\n",(0,t.jsx)(n.h5,{id:"authuserchanged",children:(0,t.jsx)(n.strong,{children:"AuthUserChanged"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class AuthUserChanged extends AuthEvent {\n  final String? userId;\n\n  const AuthUserChanged(this.userId);\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Internal event triggered when auth state changes."}),"\n",(0,t.jsx)(n.h4,{id:"authstate",children:"AuthState"}),"\n",(0,t.jsx)(n.p,{children:"States emitted by AuthBloc."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Location:"})," ",(0,t.jsx)(n.code,{children:"lib/features/auth/presentation/bloc/auth_state.dart"})]}),"\n",(0,t.jsx)(n.h5,{id:"authinitial",children:(0,t.jsx)(n.strong,{children:"AuthInitial"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class AuthInitial extends AuthState {\n  const AuthInitial();\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Initial state before any auth operations."}),"\n",(0,t.jsx)(n.h5,{id:"authloading",children:(0,t.jsx)(n.strong,{children:"AuthLoading"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class AuthLoading extends AuthState {\n  const AuthLoading();\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Authentication operation in progress."}),"\n",(0,t.jsx)(n.h5,{id:"authauthenticated",children:(0,t.jsx)(n.strong,{children:"AuthAuthenticated"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class AuthAuthenticated extends AuthState {\n  final AuthUser user;\n\n  const AuthAuthenticated(this.user);\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"User is successfully authenticated."}),"\n",(0,t.jsx)(n.h5,{id:"authunauthenticated",children:(0,t.jsx)(n.strong,{children:"AuthUnauthenticated"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class AuthUnauthenticated extends AuthState {\n  const AuthUnauthenticated();\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"User is not authenticated."}),"\n",(0,t.jsx)(n.h5,{id:"autherror",children:(0,t.jsx)(n.strong,{children:"AuthError"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class AuthError extends AuthState {\n  final String message;\n\n  const AuthError(this.message);\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Authentication operation failed with error message."}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"supabaseconfig",children:"SupabaseConfig"}),"\n",(0,t.jsx)(n.p,{children:"Configuration class for Supabase connection."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Location:"})," ",(0,t.jsx)(n.code,{children:"lib/core/config/supabase_config.dart"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"class SupabaseConfig {\n  SupabaseConfig._(); // Private constructor\n\n  static const String supabaseUrl = String.fromEnvironment(\n    'SUPABASE_URL',\n    defaultValue: 'http://localhost:54321',\n  );\n\n  static const String supabaseAnonKey = String.fromEnvironment(\n    'SUPABASE_ANON_KEY',\n    defaultValue: 'eyJhbGc...', // Local dev key\n  );\n\n  static const bool enableDebugLogging = bool.fromEnvironment(\n    'SUPABASE_DEBUG',\n    defaultValue: true,\n  );\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Constants:"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Constant"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"supabaseUrl"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"http://localhost:54321"})}),(0,t.jsx)(n.td,{children:"Supabase project URL"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"supabaseAnonKey"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:"Local dev key"}),(0,t.jsx)(n.td,{children:"Supabase anonymous key"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"enableDebugLogging"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bool"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"true"})}),(0,t.jsx)(n.td,{children:"Enable Supabase debug logs"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Environment Variables:"})}),"\n",(0,t.jsxs)(n.p,{children:["Set via ",(0,t.jsx)(n.code,{children:"--dart-define"})," flags:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"flutter run \\\n  --dart-define=SUPABASE_URL=https://xxx.supabase.co \\\n  --dart-define=SUPABASE_ANON_KEY=your-key \\\n  --dart-define=SUPABASE_DEBUG=false\n"})})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);